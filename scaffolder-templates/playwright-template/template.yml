apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: playwright-template
  title: Playwright Template
  description: Create a new playwright project with basic test cases
  tags:
    - playwright
    - javascript
    - spaship
    - github
    - ci/cd
    - template
spec:
  owner: shusingh@redhat.com
  type: website

  parameters:
    - title: Provide some simple information
      required:
        - spa_name
        - spa_path
      properties:
        spa_name:
          title: SPA Name
          type: string
          description: Please enter the SPA/Application name
          ui:field: EntityNamePicker
          ui:autofocus: true
        spa_path:
          title: Path Name
          type: string
          description: Please path without '/'
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this SPA/Application is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch-base
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          spa_name: ${{ parameters.spa_name }}
          spa_path: ${{ parameters.spa_path }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.spa_name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
